openapi: 3.0.0
info:
  title: API de TFGs y Usuarios
  version: 1.0.0
  description: API para gestionar TFGs y usuarios en la plataforma
servers:
  - url: /api
paths:
  /tfgs:
    get:
      summary: Obtener todos los TFGs
      operationId: getTFGs
      tags:
        - TFGs
      responses:
        '200':
          description: Lista de TFGs obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TFG'
    post:
      summary: Crear un nuevo TFG
      operationId: createTFG
      tags:
        - TFGs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TFG'
      responses:
        '201':
          description: TFG creado correctamente
  /tfgs/{id}:
    get:
      summary: Obtener un TFG por ID
      operationId: getTFG
      tags:
        - TFGs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TFG obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TFG'
    patch:
      summary: Actualizar un TFG parcialmente
      operationId: patchTFG
      tags:
        - TFGs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TFG'
      responses:
        '200':
          description: TFG actualizado correctamente
    put:
      summary: Actualizar un TFG completamente
      operationId: putTFG
      tags:
        - TFGs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TFG'
      responses:
        '200':
          description: TFG actualizado correctamente
    delete:
      summary: Eliminar un TFG
      operationId: deleteTFG
      tags:
        - TFGs
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: TFG eliminado correctamente
  /users:
    get:
      summary: Obtener todos los usuarios
      operationId: getUsers
      tags:
        - Usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Crear un nuevo usuario
      operationId: createUser
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado correctamente
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      operationId: getUser
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    TFG:
      type: object
      properties:
        id:
          type: string
        Año:
          type: string
        Titulación de Grado:
          type: string
        Alumno:
          type: string
        Título TFG:
          type: string
        Keywords:
          type: array
          items:
            type: string
        Link:
          type: string
        Tutor:
          type: string
        Abstract/Resumen:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: ["alumno", "profesor", "tutor", "administrador"]
